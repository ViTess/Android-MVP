def supportVersion = "25.0.0"

ext {
    compileSdkVersion = 24
    buildToolsVersion = "25.0.0"
    minSdkVersion = 15
    targetSdkVersion = 21

    //如果使用android studio 3.0，则可以使用java8
    //而且不需要用jack编译，因为android studio 3.0使用desugar工具来代替jack
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    deps = [
            //android support
            "support_design"            : "com.android.support:design:${supportVersion}",
            "support_v4"                : "com.android.support:support-v4:${supportVersion}",
            "support_v13"               : "com.android.support:support-v13:${supportVersion}",
            "support_v7"                : "com.android.support:appcompat-v7:${supportVersion}",
            "support_recyclerview"      : "com.android.support:recyclerview-v7:${supportVersion}",
            "support_gridlayout"        : "com.android.support:gridlayout-v7:${supportVersion}",
            "support_annotations"       : "com.android.support:support-annotations:${supportVersion}",

            //rxjava
            "rxandroid"                 : 'io.reactivex.rxjava2:rxandroid:2.0.1',
            "rxjava"                    : 'io.reactivex.rxjava2:rxjava:2.1.0',
            "rxlifecycle"               : 'com.trello.rxlifecycle2:rxlifecycle:2.1.0',
            "rxlifecycle_components"    : 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0',

            //rxbinding
            "rxbinding"                 : 'com.jakewharton.rxbinding2:rxbinding:2.0.0',

            //retrofit2
            "retrofit"                  : 'com.squareup.retrofit2:retrofit:2.3.0',
            "retrofit_converter_gson"   : 'com.squareup.retrofit2:converter-gson:2.3.0',
            "retrofit_converter_scalars": 'com.squareup.retrofit2:converter-scalars:2.3.0',
            "retrofit_adapter_rxjava"   : 'com.squareup.retrofit2:adapter-rxjava2:2.3.0',
            "okhttp"                    : 'com.squareup.okhttp3:okhttp:3.8.0',
            "gson"                      : 'com.google.code.gson:gson:2.8.0',

            //butterknife
            "butterknife"               : 'com.jakewharton:butterknife:8.6.0',
            "butterknife_compiler"      : "com.jakewharton:butterknife-compiler:8.6.0",

            //load image library
            //glide v4版本还存在一些问题，继续用v3
            "glide"                     : 'com.github.bumptech.glide:glide:3.8.0',
            "glide_okhttp"              : 'com.github.bumptech.glide:okhttp3-integration:1.5.0@aar',
            "glide_transformation"      : 'jp.wasabeef:glide-transformations:2.0.2',

            "keyboard_visibility_event" : 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0',

            "greendao"                  : 'org.greenrobot:greendao:3.2.2',

            //test
            "android_test"              : 'com.android.support.test.espresso:espresso-core:2.2.2',

            //内存泄露检测
            //leakcanary用于debugCompile，no_op版本用于releaseCompile
            //https://github.com/square/leakcanary
            "leakcanary"                : 'com.squareup.leakcanary:leakcanary-android:1.5.1',
            "leakcanary_no_op"          : 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    ]
}

subprojects { project ->
    if (project.name != ('app')) {
        apply plugin: 'com.android.library'
        android {
            publishNonDefault true
            defaultConfig {
                consumerProguardFiles 'proguard-rules.pro'
            }
        }
    }
}

// if use android studio 3.0+ ,just replace to "implementation project(':foo')"
project(':app') {
    apply plugin: 'com.android.application'
    android {
        defaultConfig {
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
    }
    dependencies {
        releaseCompile project(path: ':api', configuration: 'release')
        debugCompile project(path: ':api', configuration: 'debug')

        releaseCompile project(path: ':common', configuration: 'release')
        debugCompile project(path: ':common', configuration: 'debug')

        releaseCompile project(path: ':data', configuration: 'release')
        debugCompile project(path: ':data', configuration: 'debug')

        releaseCompile project(path: ':widget', configuration: 'release')
        debugCompile project(path: ':widget', configuration: 'debug')

        androidTestCompile(deps.android_test, {
            exclude group: 'com.android.support', module: 'support-annotations'
        })

        releaseCompile deps.leakcanary_no_op
        debugCompile deps.leakcanary
    }
}

project(':api') {
    apply plugin: 'com.android.library'
    dependencies {
        releaseCompile project(path: ':common', configuration: 'release')
        debugCompile project(path: ':common', configuration: 'debug')

        releaseCompile project(path: ':data', configuration: 'release')
        debugCompile project(path: ':data', configuration: 'debug')
    }
}

project(':data') {
    apply plugin: 'com.android.library'
    dependencies {
        releaseCompile project(path: ':common', configuration: 'release')
        debugCompile project(path: ':common', configuration: 'debug')
    }
}

project(':widget') {
    apply plugin: 'com.android.library'
    dependencies {
        releaseCompile project(path: ':common', configuration: 'release')
        debugCompile project(path: ':common', configuration: 'debug')
    }
}